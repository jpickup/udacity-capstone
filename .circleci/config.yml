version: 2.1

executors:
  java17:
    docker:
      - image: 'cimg/openjdk:17.0'

orbs:
  maven: circleci/maven@1.4.1
  docker: circleci/docker@2.2.0

jobs:
  build-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm --version
            yarn --version
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  scan-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Scan front-end
          command: |
            cd frontend
            npm install
            npm audit --audit-level=critical

  lint-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Test front-end
          command: |
            cd frontend
            npm install
            npm run lint

  setup-backend:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]      
      - run: 
          name: Create updated application.properties file
          command: |
            echo "Updating application.properties file in backend/application.properties"
            cd backend
            echo amazon.dynamodb.endpoint=$amazon_dynamodb_endpoint > application.properties
            echo amazon.aws.accesskey=$amazon_aws_accesskey >> application.properties
            echo amazon.aws.secretkey=$amazon_aws_secretkey >> application.properties
            cat application.properties
      - save_cache:
          paths: 
            - backend/application.properties
          key: backend-build

  build-backend:
    executor: java17
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - restore_cache:
           keys: [backend-build]      
      - run:
          name: Test
          command: |
            cd backend
            mkdir docker
            cat application.properties
            mvn clean test install
            ls -l business/docker
      - run:
          name: Build docker image
          command: |
            cd backend
            docker build --tag=udaroute .
      - run:
          name: Upload docker image to ECR
          command: |
            cd backend
            ls -l business/docker
            echo $ecr_password | docker login --username AWS --password-stdin $ecr_home
            ecrpath=$ecr_home/udaroute:latest
            echo "ERC ID and Image: $ecrpath"
            docker tag udaroute:latest $ecrpath
            docker push $ecrpath

workflows:
  default:
    jobs:
      - setup-backend
      - build-backend:
          requires: [setup-backend]
      - build-frontend
      - lint-frontend:
          requires: [build-frontend]
      - scan-frontend:
          requires: [build-frontend]
