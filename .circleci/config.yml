version: 2.1

executors:
  java17:
    docker:
      - image: 'cimg/openjdk:17.0'

orbs:
  maven: circleci/maven@1.4.1

jobs:
  build-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm --version
            yarn --version
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  scan-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Scan front-end
          command: |
            cd frontend
            npm install
            npm audit --audit-level=critical

  lint-frontend:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Test front-end
          command: |
            cd frontend
            npm install
            npm run lint

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]      
      - run: 
          name: Create updated .env file
          command: |
            echo "Updating .env file in backend/.env"
            cd backend
            echo TYPEORM_HOST=$TYPEORM_HOST >> .env
            echo TYPEORM_PORT=$TYPEORM_PORT >> .env
            echo TYPEORM_USERNAME=$TYPEORM_USERNAME >> .env
            echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD >> .env
            echo TYPEORM_DATABASE=$TYPEORM_DATABASE >> .env
            cat .env
      - run:
          name: Build back-end
          command: |
            cd backend

workflows:
  default:
    jobs:
      - maven/test:
          app_src_directory: backend
          executor: java17
      - build-frontend
      - lint-frontend:
          requires: [build-frontend]
      - scan-frontend:
          requires: [build-frontend]
      - build-backend:
          requires: [maven/test]